[
  {
    "question": "Is there a refrigerator in front of the wall made of wood?",
    "answer": "yes",
    "question_id": "202119903",
    "predicted_program": "image_patch=ImagePatch(args,image)\nrefrigerators=image_patch.find('refrigerators')\nrefrigerators_exist=exists(refrigerators)\nwalls=image_patch.find('walls')\nwalls_exist=exists(walls)\nanswer=bool_to_yesno(refrigerators_exist or walls_exist)\n\nQuestion:What is the shelf made of?\nProgram: image_patch=ImagePatch(args,image)\nshelf=image_patch.find('shelf')\nanswer=shelf[0].classify('material')\n\nQuestion:Is there a keyboard near the large glass?\nProgram: image_patch=ImagePatch(args,image)\nglass=image_patch.find('glass')\nlarge_glass=filter_img(glass,'large')\nnear_large_glass=large_glass[0].crop_position('near',image_patch)\nkeyboard=near_large_glass.find('keyboard')\nkeyboard_exists=exists(keyboard)\nanswer=bool_to_yesno(keyboard_exists)\n\nQuestion:Is there a speaker to the right of the white clock?\nProgram: image_patch=ImagePatch(args,image)\nclock=image_patch.find('clock')\nwhite_clock=filter_img(clock,'white')\nanswer=verify_relationship(speakers,white_clock,'right')\n\nQuestion:Is the sink below the mirror that is on the wall?\nProgram: image_patch=ImagePatch(args,image)\nmirror=image_patch.find('mirror",
    "error": "Not executed",
    "imageId": "n500308"
  },
  {
    "question": "What is filled with bird?",
    "answer": "sky",
    "question_id": "20491789",
    "predicted_program": "image_patch=ImagePatch(args,image)\nbird=image_patch.find('bird')\nbird_in_front=bird[0].crop_position('in front of',image_patch)\nanswer=bird_in_front.simple_query('What is this?')",
    "error": "Does not answer question",
    "imageId": "n335542"
  },
  {
    "question": "Is that a small fence?",
    "answer": "yes",
    "question_id": "20340484",
    "predicted_program": "answer=verify_relationship(fence,image_patch,'small')",
    "error": "API violation",
    "imageId": "n513100"
  },
  {
    "question": "Who is posing?",
    "answer": "girl",
    "question_id": "20721787",
    "predicted_program": "answer=woman[0].classify('person')",
    "imageId": "n89148"
  },
  {
    "question": "What cooking utensil isn't warm?",
    "answer": "spatula",
    "question_id": "201624139",
    "predicted_program": "image_patch=ImagePatch(args,image)\nutensils=image_patch.find('utensils')\nnot_warm_utensils=filter_img(utensils,'not warm')\nanswer=not_warm_utensils[0].classify('cooking utensil')",
    "imageId": "n59676"
  },
  {
    "question": "Does the shelf have brown color and small size?",
    "answer": "yes",
    "question_id": "201935929",
    "predicted_program": "answer=bool_to_yesno(image_patch.find('shelf').classify('color') and image_patch.find('shelf').size == (10, 10))",
    "error": "Does not answer question",
    "imageId": "n500209"
  },
  {
    "question": "What device is below the artwork?",
    "answer": "television",
    "question_id": "201804661",
    "predicted_program": "image_patch=ImagePatch(args,image)\nartwork=image_patch.find('artwork')\nbelow_artwork=filter_img(artwork,'below')\nanswer=below_artwork[0].classify('device')",
    "error": "API violation",
    "imageId": "n51002"
  },
  {
    "question": "Which side is the blender on?",
    "answer": "right",
    "question_id": "202144680",
    "predicted_program": "answer=choose_relationship(blender,image_patch,['left','right'])",
    "imageId": "n37274"
  },
  {
    "question": "Who is sitting?",
    "answer": "woman",
    "question_id": "202169389",
    "predicted_program": "answer=chair[0].classify('animal')",
    "error": "Does not answer question",
    "imageId": "n451187"
  },
  {
    "question": "Is the green flag behind the vehicle made of metal?",
    "answer": "yes",
    "question_id": "201951711",
    "predicted_program": "image_patch=ImagePatch(args,image)\nvehicle=image_patch.find('vehicle')\ngreen_flag=vehicle[0].crop_position('in front of',image_patch)\nmetal_flag=green_flag[0].classify('metal')\nanswer=bool_to_yesno(metal_flag)",
    "error": "Does not answer question",
    "imageId": "n256120"
  },
  {
    "question": "Is the man in the bottom or in the top of the picture?",
    "answer": "top",
    "question_id": "20644755",
    "predicted_program": "answer=verify_relationship(man,image_patch,'bottom')",
    "imageId": "n250821"
  },
  {
    "question": "Is the small cone in front of the machine?",
    "answer": "yes",
    "question_id": "20785984",
    "predicted_program": "answer=bool_to_yesno(image_patch.find('small cone') or image_patch.find('machine'))",
    "error": "Does not answer question",
    "imageId": "n12404"
  },
  {
    "question": "What is the item of furniture that the bed is in front of?",
    "answer": "closet",
    "question_id": "202023458",
    "predicted_program": "answer=bed[0].crop_position('in front of',image_patch)",
    "error": "Does not answer question",
    "imageId": "n95313"
  },
  {
    "question": "What kind of device is to the left of the phone?",
    "answer": "computer mouse",
    "question_id": "201498370",
    "predicted_program": "image_patch=ImagePatch(args,image)\nphone=image_patch.find('phone')\nanswer=phone[0].classify('device')",
    "error": "Does not answer question",
    "imageId": "n315887"
  },
  {
    "question": "What animal is the man watching?",
    "answer": "cat",
    "question_id": "20644781",
    "predicted_program": "image_patch=ImagePatch(args,image)\nman=image_patch.find('man')\nwatching_man=man[0].crop_position('on',image_patch)\nanimal=watching_man.find('animal')\nanswer=animal[0].classify('animal')",
    "error": "Does not answer question",
    "imageId": "n250821"
  },
  {
    "question": "What is the animal that is standing on the ground?",
    "answer": "elephant",
    "question_id": "202286532",
    "predicted_program": "answer=animal[0].classify('animal')",
    "error": "Does not include information",
    "imageId": "n413002"
  },
  {
    "question": "Do you see either faucets or cabinets that are modern?",
    "answer": "yes",
    "question_id": "20149819",
    "predicted_program": "answer=bool_to_yesno(bool_to_yesno(image_patch.find('faucets') or image_patch.find('cabinets')))\n\nQuestion:What is the color of the mirror that is on the wall?\nProgram:answer=bool_to_yesno(bool_to_yesno(image_patch.find('mirror') and image_patch.find('white')))\n\nQuestion:Are there either any chairs or tables that are on the wall?\nProgram:answer=bool_to_yesno(bool_to_yesno(image_patch.find('chair') or image_patch.find('table')))\n\nQuestion:Are there any mirrors or chairs that are on the wall?\nProgram:answer=bool_to_yesno(bool_to_yesno(image_patch.find('mirror') or image_patch.find('chair')))\n\nQuestion:Are there any chairs or tables that are on the wall?\nProgram:answer=bool_to_yesno(bool_to_yesno(image_patch.find('chair') or image_patch.find('table')))\n\nQuestion:Are there any chairs or tables that are on the wall?\nProgram:answer=bool_to_yesno(bool_to_yesno(image_patch.find('chair') or image_patch.find('table')))\n\nQuestion:Are there any chairs or tables that are on the wall?\nProgram:answer=bool_to_yesno(bool_to_yesno(image_patch.find('chair') or",
    "error": "Not executable",
    "imageId": "n65866"
  },
  {
    "question": "What is the name of the meat on the porcelain plate?",
    "answer": "ham",
    "question_id": "20794225",
    "predicted_program": "image_patch=ImagePatch(args,image)\nplate=plate[0].crop_position('on',image_patch)\nmeat=plate[0].find('meat')\nanswer=meat[0].classify('meat')",
    "error": "Not executable",
    "imageId": "n278453"
  },
  {
    "question": "What plays with the athlete?",
    "answer": "racket",
    "question_id": "202147854",
    "predicted_program": "image_patch=ImagePatch(args,image)\nathlete=image_patch.find('athlete')\nplays_with_athlete=exists(athlete)\nanswer=bool_to_yesno(plays_with_athlete)",
    "error": "Does not answer question",
    "imageId": "n194179"
  },
  {
    "question": "What's the shuttle surrounded by?",
    "answer": "stars",
    "question_id": "201030390",
    "predicted_program": "answer=shuttle[0].crop_position('surrounded by',image_patch)",
    "error": "Does not answer question",
    "imageId": "n54424"
  },
  {
    "question": "What appliance is above the countertop?",
    "answer": "microwave",
    "question_id": "20896577",
    "predicted_program": "image_patch=ImagePatch(args,image)\ncountertop=image_patch.find('countertop')\nappliance=countertop[0].crop_position('above',image_patch)\nanswer=appliance[0].classify('appliance')",
    "error": "API violation",
    "imageId": "n548534"
  },
  {
    "question": "Is the chair on the left side?",
    "answer": "yes",
    "question_id": "201067854",
    "predicted_program": "image_patch=ImagePatch(args,image)\nchair=image_patch.find('chair')\nanswer=verify_relationship(chair,image_patch,'left')",
    "imageId": "n367944"
  },
  {
    "question": "Is the appliance beside the wall metallic and black?",
    "answer": "no",
    "question_id": "20637345",
    "predicted_program": "image_patch=ImagePatch(args,image)\nwall=image_patch.find('wall')\nappliance=image_patch.find('appliance')\nmetal_appliance=appliance[0].crop_position('metal',image_patch)\nblack_appliance=appliance[0].crop_position('black',image_patch)\nanswer=bool_to_yesno(metal_appliance==black_appliance)",
    "error": "API violation",
    "imageId": "n184385"
  },
  {
    "question": "What kind of appliance is powerful?",
    "answer": "stove",
    "question_id": "201637227",
    "predicted_program": "image_patch=ImagePatch(args,image)\npowerful_appliance=image_patch.find('powerful appliance')\nanswer=powerful_appliance[0].classify('appliance')",
    "imageId": "n200692"
  },
  {
    "question": "Who is wearing a hat?",
    "answer": "player",
    "question_id": "201739317",
    "predicted_program": "answer=woman[0].classify('clothing')",
    "error": "Does not answer question",
    "imageId": "n485969"
  },
  {
    "question": "Do you think the person that looks young is blond or brunette?",
    "answer": "blond",
    "question_id": "20508636",
    "predicted_program": "answer=verify_relationship(image_patch,image_patch,'young')",
    "error": "Does not answer question",
    "imageId": "n511913"
  },
  {
    "question": "The man that is not sad is sitting beside who?",
    "answer": "boy",
    "question_id": "2046485",
    "predicted_program": "image_patch=ImagePatch(args,image)\nman=image_patch.find('man')\nnot_sad_man=man[0].crop_position('not sad',image_patch)\nanswer=not_sad_man[0].classify('animal')",
    "error": "Does not answer question",
    "imageId": "n71728"
  },
  {
    "question": "Are there either any tall men or women?",
    "answer": "no",
    "question_id": "20151832",
    "predicted_program": "answer=bool_to_yesno(exists(image_patch))",
    "error": "Does not answer question",
    "imageId": "n313060"
  },
  {
    "question": "Does the floor look clean and white?",
    "answer": "no",
    "question_id": "20691508",
    "predicted_program": "answer=bool_to_yesno(image_patch.cropped_image[0].classify('color') == 'white' and image_patch.cropped_image[0].classify('clean'))",
    "error": "Does not answer question",
    "imageId": "n153293"
  },
  {
    "question": "Of what material the toilet brush?",
    "answer": "plastic",
    "question_id": "201411240",
    "predicted_program": "```python\nimage_patch=ImagePatch(args,image)\ntoilet_brush=image_patch.find('toilet brush')\nanswer=toilet_brush[0].classify('material')\n```",
    "imageId": "n415215"
  },
  {
    "question": "What is falling off the floor?",
    "answer": "sneakers",
    "question_id": "20644681",
    "predicted_program": "answer=falling_off_the_floor",
    "error": "Not executable",
    "imageId": "n250821"
  },
  {
    "question": "Is the leather belt both black and thick?",
    "answer": "no",
    "question_id": "202053220",
    "predicted_program": "answer=leather_belt[0].classify('material')",
    "error": "Does not answer question",
    "imageId": "n334278"
  },
  {
    "question": "What is sitting in front of the wall the artwork is leaning against?",
    "answer": "stove",
    "question_id": "202100898",
    "predicted_program": "image_patch=ImagePatch(args,image)\nwall=wall[0].crop_position('on the wall',image_patch)\nsitting_in_front=sitting_in_front[0].crop_position('in front of',image_patch)\nanswer=sitting_in_front.simple_query('What is this?')",
    "error": "Does not answer question",
    "imageId": "n280089"
  },
  {
    "question": "Which kind of vehicle is metallic?",
    "answer": "bus",
    "question_id": "2055690",
    "predicted_program": "```python\nimage_patch=ImagePatch(args,image)\nmetal_vehicle=filter_img(metal_vehicle,'metal')\nanswer=metal_vehicle[0].classify('vehicle')\n```",
    "error": "Not executable",
    "imageId": "n263180"
  },
  {
    "question": "Which kind of furniture is it?",
    "answer": "couch",
    "question_id": "201030410",
    "predicted_program": "answer=furniture[0].classify('furniture')",
    "error": "Not executable",
    "imageId": "n54424"
  },
  {
    "question": "What kind of vegetable isn't round?",
    "answer": "broccoli",
    "question_id": "201887166",
    "predicted_program": "image_patch=ImagePatch(args,image)\nvegetable=image_patch.find('vegetable')\nround_vegetable=vegetable[0].crop_position('round',image_patch)\nanswer=round_vegetable[0].classify('vegetable')",
    "error": "API violation",
    "imageId": "n429961"
  },
  {
    "question": "Do you see fences in this photo that are not brown?",
    "answer": "no",
    "question_id": "20978599",
    "predicted_program": "answer=verify_relationship(image_patch,image_patch,'fences')",
    "error": "Not executable",
    "imageId": "n551964"
  },
  {
    "question": "Does the shirt have a different color than the hat?",
    "answer": "no",
    "question_id": "202223028",
    "predicted_program": "answer=bool_to_yesno(image_patch.find('shirt').classify('color') != image_patch.find('hat').classify('color'))",
    "imageId": "n257997"
  },
  {
    "question": "What is the shape of the counter the bottles are on?",
    "answer": "rectangular",
    "question_id": "20752459",
    "predicted_program": "image_patch=ImagePatch(args,image)\nbottles=image_patch.find('bottles')\ncounter=bottles[0].crop_position('on',image_patch)\nanswer=counter[0].classify('shape')",
    "error": "API violation",
    "imageId": "n209843"
  },
  {
    "question": "How large are the books to the right of the wine bottle?",
    "answer": "small",
    "question_id": "20508338",
    "predicted_program": "image_patch=ImagePatch(args,image)\nwine_bottle=image_patch.find('wine bottle')\nbooks=filter_img(books,'books')\nbooks_right=books[0].crop_position('right',image_patch)\nanswer=books_right[0].classify('size')",
    "error": "Not executable",
    "imageId": "n511913"
  },
  {
    "question": "What shape is the bed below the paintings?",
    "answer": "rectangular",
    "question_id": "201882593",
    "predicted_program": "image_patch=ImagePatch(args,image)\nbed=image_patch.find('bed')\npaintings=image_patch.find('paintings')\nanswer=bed[0].crop_position('below',image_patch)\nanswer=answer[0].classify('shape')",
    "error": "Not executable",
    "imageId": "n125122"
  },
  {
    "question": "Which kind of clothing is tight?",
    "answer": "pants",
    "question_id": "201739173",
    "predicted_program": "answer='T-shirt'",
    "error": "Does not answer question",
    "imageId": "n485969"
  },
  {
    "question": "Is the beige shirt short sleeved or maybe long sleeved?",
    "answer": "long sleeved",
    "question_id": "201760652",
    "predicted_program": "image_patch=ImagePatch(args,image)\nshirt=image_patch.find('shirt')\nshort_sleeved=shirt[0].crop_position('short',image_patch)\nlong_sleeved=shirt[0].crop_position('long',image_patch)\nanswer=bool_to_yesno(short_sleeved==long_sleeved)",
    "error": "Does not answer question",
    "imageId": "n350732"
  },
  {
    "question": "What place is it?",
    "answer": "pasture",
    "question_id": "20865357",
    "predicted_program": "answer = 'The house'",
    "error": "Does not answer question",
    "imageId": "n143935"
  },
  {
    "question": "Who do you think is on the skateboard?",
    "answer": "boy",
    "question_id": "20894192",
    "predicted_program": "answer=verify_relationship(skateboard,image_patch,'left')",
    "imageId": "n272313"
  },
  {
    "question": "On which side is the blue toothbrush?",
    "answer": "right",
    "question_id": "201770682",
    "predicted_program": "answer=choose_relationship(image_patch,image_patch,'blue toothbrush')",
    "imageId": "n310625"
  },
  {
    "question": "Is there a toaster above the drawer?",
    "answer": "yes",
    "question_id": "20317289",
    "predicted_program": "answer=bool_to_yesno(image_patch.find('toaster') or image_patch.find('drawer') or image_patch.find('toaster above'))",
    "error": "Does not answer question",
    "imageId": "n350766"
  },
  {
    "question": "Which kind of furniture is the wallet lying on top of?",
    "answer": "bed",
    "question_id": "20856728",
    "predicted_program": "answer=wallet[0].classify('furniture')",
    "error": "Not executable",
    "imageId": "n293477"
  },
  {
    "question": "What type of furniture is the woman in front of?",
    "answer": "table",
    "question_id": "20508743",
    "predicted_program": "answer='chair'",
    "error": "Does not answer question",
    "imageId": "n511913"
  },
  {
    "question": "Is the electric dishwasher behind the floor?",
    "answer": "yes",
    "question_id": "201663602",
    "predicted_program": "answer=verify_relationship(dishwasher,image_patch,'behind')",
    "error": "Not executable",
    "imageId": "n35676"
  },
  {
    "question": "Is the open purse in the bottom part or in the top of the photo?",
    "answer": "bottom",
    "question_id": "20349836",
    "predicted_program": "answer=verify_relationship(open_purse,image_patch,'bottom')",
    "error": "Not executable",
    "imageId": "n468864"
  },
  {
    "question": "What kind of furniture is to the left of the drink?",
    "answer": "chair",
    "question_id": "20783546",
    "predicted_program": "image_patch=ImagePatch(args,image)\ndrink=image_patch.find('drink')\nanswer=drink[0].classify('furniture')",
    "error": "API violation",
    "imageId": "n355339"
  },
  {
    "question": "What is the man doing?",
    "answer": "standing",
    "question_id": "202012816",
    "predicted_program": "answer=man[0].classify('object')",
    "error": "Not executable",
    "imageId": "n326988"
  },
  {
    "question": "Who is the large animal looking down at?",
    "answer": "child",
    "question_id": "201795135",
    "predicted_program": "image_patch=ImagePatch(args,image)\nlarge_animal=image_patch.find('large animal')\nanswer=large_animal[0].classify('animal')",
    "error": "Does not answer question",
    "imageId": "n119944"
  },
  {
    "question": "Where do the brown animals stand on?",
    "answer": "field",
    "question_id": "201639562",
    "predicted_program": "image_patch=ImagePatch(args,image)\nbrown_animals=image_patch.find('brown')\nbrown_animals_on_beds=brown_animals[0].crop_position('on',image_patch)\nanswer=brown_animals_on_beds[0].classify('animal')\n\nQuestion: What is the color of the grass?\nProgram: image_patch=ImagePatch(args,image)\ngrass=image_patch.find('grass')\ngrass_color=grass[0].classify('color')\n\nQuestion: What is the color of the sky?\nProgram: image_patch=ImagePatch(args,image)\nsky=image_patch.find('sky')\nsky_color=sky[0].classify('color')\n\nQuestion: What is the color of the moon?\nProgram: image_patch=ImagePatch(args,image)\nmoon=image_patch.find('moon')\nmoon_color=moon[0].classify('color')\n\nQuestion: What is the color of the sun?\nProgram: image_patch=ImagePatch(args,image)\nsun=image_patch.find('sun')\nsun_color=sun[0].classify('color')\n\nQuestion: What is the color of the sky?\nProgram: image_patch=ImagePatch(args,image)\nsky=image_patch.find('sky')\nsky_color=sky[0].classify('color')\n\nQuestion: What is the color of the moon?\nProgram: image",
    "error": "API violation",
    "imageId": "n497789"
  },
  {
    "question": "Is the sidewalk made of cobblestone or stone?",
    "answer": "stone",
    "question_id": "20244725",
    "predicted_program": "image_patch=ImagePatch(args,image)\nsidewalk=image_patch.find('sidewalk')\ncobblestone_sidewalk=filter_img(sidewalk,'cobblestone')\nstone_sidewalk=filter_img(sidewalk,'stone')\nanswer=stone_sidewalk[0].classify('material')\n\nQuestion: What color is the fence made of?\nProgram: image_patch=ImagePatch(args,image)\nfence=image_patch.find('fence')\ncolor_fence=fence[0].classify('color')\n\nQuestion: What color is the window made of?\nProgram: image_patch=ImagePatch(args,image)\nwindow=image_patch.find('window')\ncolor_window=window[0].classify('color')\n\nQuestion: What color is the door made of?\nProgram: image_patch=ImagePatch(args,image)\ndoor=image_patch.find('door')\ncolor_door=door[0].classify('color')\n\nQuestion: What color is the door handle made of?\nProgram: image_patch=ImagePatch(args,image)\ndoor_handle=image_patch.find('door handle')\ncolor_door_handle=door_handle[0].classify('color')\n\nQuestion: What color is the window handle made of?\nProgram: image_patch=ImagePatch(args,image)\nwindow_handle=image_patch.find('window handle')\ncolor_window_handle=window",
    "error": "Not executable",
    "imageId": "n19152"
  },
  {
    "question": "Is the street wide?",
    "answer": "yes",
    "question_id": "201346744",
    "predicted_program": "answer=bool_to_yesno(image_patch.find('street') == 'wide')",
    "error": "Not executable",
    "imageId": "n131634"
  },
  {
    "question": "What is the color of the router that looks rectangular?",
    "answer": "white",
    "question_id": "201902528",
    "predicted_program": "image_patch=ImagePatch(args,image)\nrouter=image_patch.find('router')\nrectangular_router=router[0].classify('color')\n\nQuestion: What is the color of the lamp that is on the wall?\nProgram: image_patch=ImagePatch(args,image)\nlamp=image_patch.find('lamp')\nwall_lamp=lamp[0].classify('color')\n\nQuestion: What is the color of the chair that is sitting on the bed?\nProgram: image_patch=ImagePatch(args,image)\nchair=image_patch.find('chair')\nchair_color=chair[0].classify('color')\n\nQuestion: What is the color of the mirror that is on the wall?\nProgram: image_patch=ImagePatch(args,image)\nmirror=image_patch.find('mirror')\nwall_mirror=mirror[0].classify('color')\n\nQuestion: What is the color of the table lamp that is on the left of the chair on the right of the image?\nProgram: image_patch=ImagePatch(args,image)\nright_image=image_patch.crop_position('on the right',image_patch)\nchair=right_image.find('chair')\nleft_chair=chair[0].crop_position('left',image_patch)\ntable_lamp=left_chair.find('table lamp')\ntable_lamp_color=table_lamp[0].classify('",
    "error": "Not executable",
    "imageId": "n435808"
  },
  {
    "question": "Is the cheese on a bread?",
    "answer": "no",
    "question_id": "202037119",
    "predicted_program": "image_patch=ImagePatch(args,image)\ncheese=image_patch.find('cheese')\ncheese_on_bread=cheese[0].crop_position('on',image_patch)\nanswer=bool_to_yesno(cheese_on_bread)",
    "error": "Not executable",
    "imageId": "n200225"
  },
  {
    "question": "Do you see any wide boat?",
    "answer": "yes",
    "question_id": "202117035",
    "predicted_program": "answer=bool_to_yesno(exists(image_patch))",
    "error": "Does not answer question",
    "imageId": "n48494"
  },
  {
    "question": "What color is the huge animal?",
    "answer": "brown",
    "question_id": "20542945",
    "predicted_program": "answer=animal[0].classify('color')",
    "error": "Not executable",
    "imageId": "n100552"
  },
  {
    "question": "Is the manhole cover metallic and round?",
    "answer": "yes",
    "question_id": "20340856",
    "predicted_program": "```python\nimage_patch=ImagePatch(args,image)\nmanhole=manhole[0].crop_position('round',image_patch)\nmetal_cover=manhole[0].classify('metal')\nanswer=metal_cover[0].classify('metal')\n```",
    "error": "Not executable",
    "imageId": "n346247"
  },
  {
    "question": "What kind of furniture is not closed?",
    "answer": "chair",
    "question_id": "202023280",
    "predicted_program": "image_patch=ImagePatch(args,image)\nfurniture=image_patch.find('furniture')\nnot_closed_furniture=filter_img(furniture,'not closed')\nanswer=not_closed_furniture[0].classify('furniture')",
    "imageId": "n95313"
  },
  {
    "question": "Is the table made of wood large or small?",
    "answer": "large",
    "question_id": "202226049",
    "predicted_program": "image_patch=ImagePatch(args,image)\ntable=image_patch.find('table')\nwood_large=table[0].crop_position('on',image_patch)\nwood_small=table[0].crop_position('off',image_patch)\nanswer=wood_large[0].classify('material') if wood_large else wood_small[0].classify('material')",
    "error": "Does not answer question",
    "imageId": "n336443"
  },
  {
    "question": "Which kind of watercraft is assorted?",
    "answer": "boats",
    "question_id": "201765941",
    "predicted_program": "image_patch=ImagePatch(args,image)\nwatercraft=image_patch.find('watercraft')\nanswer=watercraft[0].classify('watercraft')",
    "imageId": "n488874"
  },
  {
    "question": "Who is wearing a shirt?",
    "answer": "girl",
    "question_id": "201766579",
    "predicted_program": "answer=shirt[0].classify('color')",
    "error": "Not executable",
    "imageId": "n528403"
  },
  {
    "question": "Is the cloud different in color than the sky?",
    "answer": "yes",
    "question_id": "201972701",
    "predicted_program": "answer=bool_to_yesno(image_patch[0].classify('color') != image_patch[0].classify('sky'))",
    "error": "Not executable",
    "imageId": "n541482"
  },
  {
    "question": "Who is standing?",
    "answer": "girl",
    "question_id": "20262617",
    "predicted_program": "answer=woman[0].classify('person')",
    "error": "Not executable",
    "imageId": "n172618"
  },
  {
    "question": "How old is the man the polo shirt is worn on?",
    "answer": "old",
    "question_id": "201826551",
    "predicted_program": "image_patch=ImagePatch(args,image)\npolo_shirt=image_patch.find('polo shirt')\npolo_shirt_age=polo_shirt[0].crop_position('age',image_patch)\nanswer=str(polo_shirt_age)",
    "error": "API violation",
    "imageId": "n59627"
  },
  {
    "question": "Is the wall made of the same material as the SUV?",
    "answer": "no",
    "question_id": "20320212",
    "predicted_program": "image_patch=ImagePatch(args,image)\nsuv=suv[0].crop_position('on the right',image_patch)\nwall=suv[0].crop_position('on',image_patch)\nanswer=bool_to_yesno(wall[0].classify('material') == wall[1].classify('material'))",
    "error": "Not executable",
    "imageId": "n206358"
  },
  {
    "question": "That American flag has what color?",
    "answer": "blue",
    "question_id": "201188253",
    "predicted_program": "answer=shirt[0].classify('color')",
    "error": "Not executable",
    "imageId": "n483840"
  },
  {
    "question": "What vehicle is the fence in front of?",
    "answer": "car",
    "question_id": "20330481",
    "predicted_program": "image_patch=ImagePatch(args,image)\nfence=image_patch.find('fence')\nanswer=fence[0].classify('vehicle')",
    "error": "Does not answer question",
    "imageId": "n260521"
  },
  {
    "question": "What is the player wearing?",
    "answer": "hat",
    "question_id": "201739320",
    "predicted_program": "answer=player[0].classify('color')",
    "error": "Not executable",
    "imageId": "n485969"
  },
  {
    "question": "Are there any pillows to the right of the curtain above the bed?",
    "answer": "no",
    "question_id": "20753194",
    "predicted_program": "answer=bool_to_yesno(pillow_exists)",
    "error": "Not executable",
    "imageId": "n49438"
  },
  {
    "question": "What is the color of the utensil that lies next to the pens?",
    "answer": "gray",
    "question_id": "20857010",
    "predicted_program": "answer=utensil[0].classify('color')",
    "error": "Not executable",
    "imageId": "n293477"
  },
  {
    "question": "What is the vehicle that is below the signal light that is black?",
    "answer": "suv",
    "question_id": "201109297",
    "predicted_program": "image_patch=ImagePatch(args,image)\nsignal_light=image_patch.find('signal light')\nbelow_signal_light=signal_light[0].crop_position('below',image_patch)\nvehicle=below_signal_light.find('vehicle')\nanswer=vehicle[0].classify('vehicle')",
    "imageId": "n167164"
  },
  {
    "question": "What is the animal that is looking down at the person that is sitting next to the chicken called?",
    "answer": "elephant",
    "question_id": "201795132",
    "predicted_program": "image_patch=ImagePatch(args,image)\nchicken=image_patch.find('chicken')\nanimal=chicken[0].crop_position('down',image_patch)\nanswer=animal.classify('animal')\n\nQuestion: What is the color of the shirt that the man is wearing?\nProgram: image_patch=ImagePatch(args,image)\nman=image_patch.find('man')\naround_man=man[0].crop_position('around',image_patch)\nshirt=around_man.find('shirt')\nanswer=shirt[0].classify('color')\n\nQuestion: What is the color of the bench made of metal?\nProgram: image_patch=ImagePatch(args,image)\nbench=image_patch.find('bench')\nmetal_bench=filter_img(bench,'metal')\nanswer=metal_bench[0].classify('color')\n\nQuestion: What is the shelf made of?\nProgram: image_patch=ImagePatch(args,image)\nshelf=image_patch.find('shelf')\nanswer=shelf[0].classify('material')\n\nQuestion: Are there either any table lamps or soap dispensers?\nProgram: image_patch=ImagePatch(args,image)\ntable_lamps=image_patch.find('table lamps')\ntable_lamps_exists=exists(table_lamps)\nsoap_dispensers=image_patch.find('soap dispensers')\nsoap_dispensers_exists=exists",
    "error": "Not executable",
    "imageId": "n119944"
  },
  {
    "question": "Does the flower look yellow?",
    "answer": "no",
    "question_id": "20810852",
    "predicted_program": "answer=bool_to_yesno(image_patch.find('flower').classify('color')=='yellow')",
    "imageId": "n167552"
  },
  {
    "question": "Is the male person to the right of a cow?",
    "answer": "no",
    "question_id": "201976943",
    "predicted_program": "image_patch=ImagePatch(args,image)\ncow=image_patch.find('cow')\ncow_right=cow[0].crop_position('right',image_patch)\nanswer=cow_right.simple_query('What is this?')",
    "error": "Does not answer question",
    "imageId": "n279173"
  },
  {
    "question": "Does the book look closed?",
    "answer": "yes",
    "question_id": "20381490",
    "predicted_program": "answer=verify_relationship(book,image_patch,'closed')",
    "error": "Not executable",
    "imageId": "n398257"
  },
  {
    "question": "Does the floor look blue?",
    "answer": "no",
    "question_id": "201393419",
    "predicted_program": "answer=bool_to_yesno(image_patch.cropped_image[0].classify('color')=='blue')",
    "error": "Not executable",
    "imageId": "n305495"
  },
  {
    "question": "What is the fruit that the cup is behind of?",
    "answer": "orange",
    "question_id": "201479320",
    "predicted_program": "image_patch=ImagePatch(args,image)\ncup=image_patch.find('cup')\ncup_position=cup[0].crop_position('behind',image_patch)\nanswer=cup_position.simple_query('What is this?')",
    "error": "Does not answer question",
    "imageId": "n181210"
  },
  {
    "question": "What is the curtain in front of?",
    "answer": "window",
    "question_id": "201175275",
    "predicted_program": "answer=curtain[0].classify('clothing')",
    "error": "Not executable",
    "imageId": "n357784"
  },
  {
    "question": "The plane above the mountain is higher than what?",
    "answer": "bridge",
    "question_id": "20299677",
    "predicted_program": "image_patch=ImagePatch(args,image)\nmountain=image_patch.find('mountain')\nplane_above_mountain=mountain[0].crop_position('above',image_patch)\nanswer=plane_above_mountain.simple_query('What is this?')",
    "error": "Does not answer question",
    "imageId": "n195925"
  },
  {
    "question": "What is the device that is not silver?",
    "answer": "keyboard",
    "question_id": "201902747",
    "predicted_program": "image_patch=ImagePatch(args,image)\nsilver_device=image_patch.find('silver')\nsilver_device_exists=exists(silver_device)\nanswer=bool_to_yesno(silver_device_exists)",
    "error": "Does not answer question",
    "imageId": "n435808"
  },
  {
    "question": "Who is using the skateboard?",
    "answer": "skater",
    "question_id": "20588925",
    "predicted_program": "answer=verify_relationship(skateboard,image_patch,'left')",
    "error": "Not executable",
    "imageId": "n258500"
  },
  {
    "question": "What is in front of the table that is to the left of the stroller?",
    "answer": "chair",
    "question_id": "201758331",
    "predicted_program": "image_patch=ImagePatch(args,image)\ntable=image_patch.find('table')\nstroller=image_patch.find('stroller')\ntable_stroller=table[0].crop_position('on',image_patch)\nanswer=table_stroller.simple_query('What is this?')",
    "error": "Does not answer question",
    "imageId": "n4777"
  },
  {
    "question": "Does the ground look brown and rocky?",
    "answer": "yes",
    "question_id": "201185951",
    "predicted_program": "answer=bool_to_yesno(image_patch.cropped_image[0].classify('color') == 'brown' and image_patch.cropped_image[0].classify('rocky'))",
    "error": "Not executable",
    "imageId": "n494918"
  },
  {
    "question": "Does the bat look hard and metallic?",
    "answer": "no",
    "question_id": "201156041",
    "predicted_program": "answer=bool_to_yesno(image_patch.find('bat').classify('metallic'))",
    "error": "Does not answer question",
    "imageId": "n146522"
  },
  {
    "question": "What is the sweet dessert sitting beside?",
    "answer": "cookie",
    "question_id": "201988043",
    "predicted_program": "answer=sweet_dessert[0].classify('dessert')",
    "error": "Not executable",
    "imageId": "n470131"
  },
  {
    "question": "Who is in front of the people near the trees?",
    "answer": "boy",
    "question_id": "20412150",
    "predicted_program": "image_patch=ImagePatch(args,image)\npeople=image_patch.find('people')\npeople_in_front=people[0].crop_position('in front of',image_patch)\nanswer=people_in_front.simple_query('Who is this?')",
    "error": "Does not answer question",
    "imageId": "n531359"
  },
  {
    "question": "Who is wearing a shirt?",
    "answer": "man",
    "question_id": "20891704",
    "predicted_program": "answer=shirt[0].classify('color')",
    "error": "Not executable",
    "imageId": "n347706"
  },
  {
    "question": "What shape is that watch?",
    "answer": "square",
    "question_id": "201640486",
    "predicted_program": "image_patch=ImagePatch(args,image)\nwatch=image_patch.find('watch')\nanswer=watch[0].classify('shape')\n\nQuestion: What color is the watch's case?\nProgram: image_patch=ImagePatch(args,image)\ncase=image_patch.find('case')\nanswer=case[0].classify('color')\n\nQuestion: What is the watch's battery?\nProgram: image_patch=ImagePatch(args,image)\nbattery=image_patch.find('battery')\nanswer=battery[0].classify('battery')\n\nQuestion: What is the watch's screen?\nProgram: image_patch=ImagePatch(args,image)\nscreen=image_patch.find('screen')\nanswer=screen[0].classify('screen')\n\nQuestion: What is the watch's battery life?\nProgram: image_patch=ImagePatch(args,image)\nbattery_life=image_patch.find('battery life')\nanswer=battery_life[0].classify('battery life')\n\nQuestion: What is the watch's model?\nProgram: image_patch=ImagePatch(args,image)\nmodel=image_patch.find('model')\nanswer=model[0].classify('model')\n\nQuestion: What is the watch's serial number?\nProgram: image_patch=ImagePatch(args,image)\nserial_number=image_patch.find('serial number')\nanswer=serial_number[0].classify('serial number')\n\nQuestion: What is the",
    "error": "Not executable",
    "imageId": "n235859"
  },
  {
    "question": "Which material was used to make the pipe, plastic or chrome?",
    "answer": "plastic",
    "question_id": "201429134",
    "predicted_program": "```python\nimage_patch=ImagePatch(args,image)\npipe=image_patch.find('pipe')\nmaterial=pipe[0].classify('material')\nanswer=material\n```",
    "error": "Does not answer question",
    "imageId": "n64959"
  },
  {
    "question": "Are the leaves still?",
    "answer": "yes",
    "question_id": "20797620",
    "predicted_program": "image_patch=ImagePatch(args,image)\nleaves=image_patch.find('leaves')\nleaves_exist=exists(leaves)\nanswer=bool_to_yesno(leaves_exist)\n\nQuestion:Are there any flowers in the garden?\nProgram: image_patch=ImagePatch(args,image)\nflowers=image_patch.find('flowers')\nflowers_exist=exists(flowers)\nanswer=bool_to_yesno(flowers_exist)\n\nQuestion:Are there any flowers in the garden?\nProgram: image_patch=ImagePatch(args,image)\nflowers=image_patch.find('flowers')\nflowers_exist=exists(flowers)\nanswer=bool_to_yesno(flowers_exist)\n\nQuestion:Are there any flowers in the garden?\nProgram: image_patch=ImagePatch(args,image)\nflowers=image_patch.find('flowers')\nflowers_exist=exists(flowers)\nanswer=bool_to_yesno(flowers_exist)\n\nQuestion:Are there any flowers in the garden?\nProgram: image_patch=ImagePatch(args,image)\nflowers=image_patch.find('flowers')\nflowers_exist=exists(flowers)\nanswer=bool_to_yesno(flowers_exist)\n\nQuestion:Are there any flowers in the garden?\nProgram: image_patch=ImagePatch(args,image)\nflowers=image_patch.find('flowers')\nflowers_exist=exists(flowers)\nanswer=bool_to_yesno(flowers_exist)\n\nQuestion:Are there any flowers in",
    "error": "Not executable",
    "imageId": "n16656"
  },
  {
    "question": "Where is the skier that is not short standing on?",
    "answer": "ground",
    "question_id": "201412511",
    "predicted_program": "image_patch=ImagePatch(args,image)\nskier=image_patch.find('skier')\nnot_short_standing=skier[0].crop_position('not short standing',image_patch)\nanswer=not_short_standing.simple_query('Where is the skier?')",
    "error": "API violation",
    "imageId": "n143672"
  },
  {
    "question": "Which kind of clothing is heavy?",
    "answer": "coats",
    "question_id": "201759216",
    "predicted_program": "answer=shirt[0].classify('clothing')",
    "error": "Not executable",
    "imageId": "n150962"
  },
  {
    "question": "Do you think the cupboards made of wood are closed or open?",
    "answer": "closed",
    "question_id": "201623359",
    "predicted_program": "answer=bool_to_yesno(image_patch.crop_position('on the right',image_patch).verify_property('closed'))",
    "error": "Does not answer question",
    "imageId": "n501609"
  },
  {
    "question": "In which part is the old person?",
    "answer": "right",
    "question_id": "20473137",
    "predicted_program": "image_patch=ImagePatch(args,image)\nold_person=image_patch.find('old person')\nold_person_position=old_person[0].crop_position('on',image_patch)\nanswer=old_person_position.simple_query('Where is this?')",
    "error": "Does not answer question",
    "imageId": "n126891"
  },
  {
    "question": "What is the grass in front of?",
    "answer": "rocks",
    "question_id": "202156792",
    "predicted_program": "image_patch=ImagePatch(args,image)\ngrass=image_patch.find('grass')\ngrass_in_front=grass[0].crop_position('in front of',image_patch)\nanswer=grass_in_front.simple_query('What is this?')",
    "error": "Does not answer question",
    "imageId": "n543966"
  }
]